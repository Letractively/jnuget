<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id>FluentAssertions</id>
    <version>1.6.0</version>
    <title>Fluent Assertions</title>
    <authors>Dennis Doomen, Martin Opdam</authors>
    <owners>Dennis Doomen</owners>
    <licenseUrl>http://fluentassertions.codeplex.com/license</licenseUrl>
    <projectUrl>http://fluentassertions.codeplex.com</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>A very extensive set of extension methods for .NET 3.5, 4.0 and Silverlight 4.0 that allow you to more naturally specify the expected outcome of a TDD or BDD-style unit test.</description>
    <releaseNotes>• And() extension method to TimeSpanConversionExtensions to support 4.Hours().And(30.Minutes()).
          • More TimeSpan extensions to fluently create a TimeSpan like  23.Hours(59.Minutes()).And(20.Seconds()).
          • Support for Mspec as contributed by Urs Enzler.
          • Support for the ComparisonMode to assert inner exception messages as well. Also added ComparisonMode Equivalent and EquivalentSubstring to assert that the message of an (inner) exception matches a certain case-insensitive phrase.
          • Guid assertions like Be(), NotBe(), BeEmpty() and NotBeEmpty().
          • Support for recursively comparing the properties of nested objects using ShouldHave().AllProperties().IncludingNestedObjects().EqualTo().
          • Type and MethodInfo assertions for asserting class members are virtual or decorated with specific attributes.
          • Before and After extensions methods for TimeSpans .
          • Should().Be() and NotBe() extensions to the TypeAssertions.
          • PDB files to the release build as another contribution by Urs Enzler.
          • The name of the property to the ShouldFirePropertyChanged extension method failure message, also contributed by Urs Enzler.
          • Added comments to some of the assertion classes.
          • Fixed a stack overflow exception due to a recursive call between the various overloads of floating point extension method BeApproximately()
          • While comparing two collections for equality, FA didn't check any superfluous items in the expected collection.
          • Boolean assertions did not properly check against null values.
          • Fixed a stack overflow exception while creating a displayable representation of an object  that contains circular references.
          • Fixed some potential memory leaks fix in MonitorEvents() using a patch provided by Remo Gloor.
          • Sometimes the wrong name of a the property or type was reported in a failure message.
          • ShouldHave().AllProperties().EqualTo() sometimes treated two objects that are functional equivalent according to their Equals() override as different, simply because they were not of the same type.
          • Fixed the detection of collection items that appear in the wrong order in Should().ContainInOrder().</releaseNotes>
    <language>en-US</language>
    <tags>MSTest xUnit NUnit TDD BDD Fluent Silverlight</tags>
  </metadata>
</package>